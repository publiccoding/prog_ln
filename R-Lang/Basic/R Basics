

R Structure 


R Functions 

set.seed(65) -> to set the same pattern of random number generation
runif(9,3,6)  -> to generate the random list of numbers 
runif(min=3,max=6,n=9) -> runif with argumented specified 
runif(3,,6)
other functions => dunif,punif,qunif

package:'datasets'

-> To install the package 
    install.packages('package_name')
-> To Aciviate the package(load package)
    library('package_name')

object and sequence:

-> object as variable 
   ex: object = 3:7 ( 3:7 is sequence of elements)

-> Concatination sequence elements using c 
   ex: c(3,4,5,6) -is list or vector 

-> rm ()  - remove object 


Operators and Assignment :

-> x <- c(4,5,6)
-> x = c(4,5,6)
-> c(4,5,6) <- y
-> assign("x",c(4,5,6))

Conditional Operators:
=, <,>,<=,>= 

() - round brackets as the standard 
[] - box brackets for index position 
{} - curly brackets for functions and loops 

newobject <- x<5; newobject

Inbuilt Function:

-> sum(x)
-> sqrt(y)
-> seq() - Generate sequence of elements
           ex: seq(3,5),seq(from=3,to=5),seq(from=3,length=8),seq(from=3,length=6,by=0.5),seq(from=3,by=0.5,length=6)
-> paste() - generates characters
           ex: paste(1:4),class(paste),paste("xyz",1:10),paste("xyz",c(2,3,4,"test",4.5)),paste("xyz",1:10,sep="")         
-> rep () - Replicate single element form list 
           ex: rep(c(3,4,5),3),rep(1:10,times=3),rep(x,each=3),rep(x,each=3,times=3)
-> which - to find the index position 
           ex: which(x==10)
-> Retrive the value using index position
           ex: x[3]


Functions and loops:

myfirstfn <- function(x) {x+x}
myfirstfn(10)

mysecondfn = function(t,z)
{
value = z*3
value = value * t 
print(value)
}

if (n >=2)
{
    s = seq(2,n)
}

#DataSets and Dataframes

Dataframes - Row and Column 

?airmiles
Usefull function:
head() - prints first six rows 
tail() - prints last six rows 
summary() - prints basic statistics on each of the variable 
plot() - pints a xy-plot 
hist() - prints a histogram


#Data frames:
$ - gives access to a specified column within a DataSet
attach() - attaches datasets to the environment 
detach() - remove datasets to the environment 

##importing csv files

scan() - to store the vection data 
    ex: number = scan()
    ex: characters = scan(what = "character") for character dataset

data.table - is package to perform the data operation on the imported data file ( csv,txt)
During each session 
  - set absolute path of working director 
  - install the package , install.packages(data.table),library(data.table)
  - Use fread("test.csv") to import the data file 
    ex:
        # numbers = scan()
        # characters = scan(what =  "character")
        # library(data.table)
        # mydata = fread("test.csv")
        # mydata
        # summary(mydata$`20 -30g`)

# R for data visualization 

lattice 
ggplot2,baxplot,barplot,plot,hist 

## Plots and their type 
type - line type 
main = Title of the plot

plot(x,y)
plot(lynx)
plot(lynx, main="Lynx Trapping",col="red",col.main=52,cex.main=1.5)

par(mfrow=c(2,2),col.axis="red")
plot(1:8,las=0,xlab="xlab",ylab="ylab",main="LAS =0")

apply function:

apply ( arrays - matrices)
tapply ( vector can be split in different subsets)
lapply(whole subfamily is for vectors or lists)
sapply(user friendly version of lapply)
vapply( similar to sapply modified return value)
replicate (random nr generation)
    ex:
        x = matrix(c(1:9),nr=3,byrow =T)
        print(x)
        apply(x,1,mean)
        apply(x,2,mean)
        apply(x,1,plot)
